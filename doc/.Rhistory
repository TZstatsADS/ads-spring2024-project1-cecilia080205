library(dplyr)
demographic <- read.csv("../data/demographic.csv")
cleaned_hm <- read.csv("../data/cleaned_hm.csv")
merged_data <- merge(cleaned_hm, demographic, by = "wid")
single_data <- filter(merged_data, marital == "single" & (gender == "m" | gender == "f"))
final_data <- select(single_data, names(cleaned_hm), age, country, gender)
write.csv(final_data, "../output/single_happy_moments.csv", row.names = FALSE)
single_data <- read.csv("../output/single_happy_moments.csv")
single_males <- subset(single_data, gender == "m")
single_females <- subset(single_data, gender == "f")
write.csv(single_males, "../data/single_males.csv", row.names = FALSE)
write.csv(single_females, "../data/single_females.csv", row.names = FALSE)
library(shiny)
# Define UI
ui <- fluidPage(
titlePanel("Analysis of Single Males and Females Happiness Data"),
sidebarLayout(
sidebarPanel(
selectInput("gender", "Choose Gender:",
choices = c("Male", "Female")),
downloadButton("downloadData", "Download CSV")
),
mainPanel(
tableOutput("viewData")
)
)
)
# Define server logic
server <- function(input, output) {
# Reactive expression to read the selected dataset
datasetInput <- reactive({
switch(input$gender,
"Male" = read.csv("../data/single_males.csv"),
"Female" = read.csv("../data//single_females.csv"))
})
# Render the table in the UI
output$viewData <- renderTable({
datasetInput()
})
# Downloadable csv of selected dataset
output$downloadData <- downloadHandler(
filename = function() {
paste(input$gender, "data.csv", sep = "_")
},
content = function(file) {
write.csv(datasetInput(), file, row.names = FALSE)
}
)
}
# Run the application
shinyApp(ui = ui, server = server)
library(shiny)
# Define UI
ui <- fluidPage(
titlePanel("Analysis of Single Males and Females Happiness Data"),
sidebarLayout(
sidebarPanel(
selectInput("gender", "Choose Gender:",
choices = c("Male", "Female")),
downloadButton("downloadData", "Download CSV")
),
mainPanel(
tableOutput("viewData")
)
)
)
# Define server logic
server <- function(input, output) {
# Reactive expression to read the selected dataset
datasetInput <- reactive({
switch(input$gender,
"Male" = read.csv("../data/single_males.csv"),
"Female" = read.csv("../data//single_females.csv"))
})
# Render the table in the UI
output$viewData <- renderTable({
datasetInput()
})
# Downloadable csv of selected dataset
output$downloadData <- downloadHandler(
filename = function() {
paste(input$gender, "data.csv", sep = "_")
},
content = function(file) {
write.csv(datasetInput(), file, row.names = FALSE)
}
)
}
# Run the application
shinyApp(ui = ui, server = server)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(tidyr)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(tidyr)
single_females <- read.csv('../data/single_females.csv')
single_males <- read.csv('../data/single_males.csv')
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(tidyr)
library(tidyverse)
library(tm)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(tidyr)
library(tidyverse)
library(tm)
single_females <- read.csv('../data/single_females.csv')
single_males <- read.csv('../data/single_males.csv')
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(tidyr)
library(tidyverse)
library(tm)
get_word_frequency <- function(data, text_column) {
data %>%
select(!!sym(text_column)) %>%
unnest_tokens(word, !!sym(text_column)) %>%
anti_join(stop_words) %>%
count(word, sort = TRUE)
}
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(tidyr)
library(tidyverse)
library(tm)
get_word_frequency <- function(data, text_column) {
data %>%
select(!!sym(text_column)) %>%
unnest_tokens(word, !!sym(text_column)) %>%
anti_join(stop_words) %>%
count(word, sort = TRUE)
}
word_freq_females <- get_word_frequency(single_females, "cleaned_hm")
get_word_frequency <- function(data, text_column) {
data %>%
select(!!sym(text_column)) %>%
unnest_tokens(word, !!sym(text_column)) %>%
anti_join(stop_words) %>%
count(word, sort = TRUE)
}
word_freq_females <- get_word_frequency(single_females, "cleaned_hm")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(tidyr)
library(tidyverse)
library(tm)
get_word_frequency <- function(data, text_column) {
data %>%
select(!!sym(text_column)) %>%
unnest_tokens(word, !!sym(text_column)) %>%
anti_join(stop_words) %>%
count(word, sort = TRUE)
}
word_freq_females <- get_word_frequency(single_females, "cleaned_hm")
library(tidytext)
install.packages("tidytext")
library(tidytext)
install.packages("tidytext")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(tidyr)
library(tidyverse)
library(tm)
get_word_frequency <- function(data, text_column) {
data %>%
select(!!sym(text_column)) %>%
unnest_tokens(word, !!sym(text_column)) %>%
anti_join(stop_words) %>%
count(word, sort = TRUE)
}
word_freq_females <- get_word_frequency(single_females, "cleaned_hm")
